- name: webinfrastructure
  hosts: 
    - vmapache
    - vmmariadb
    - vmnginxnocache
    - vmnginxwithcache
    - vmdns
  become: yes
  remote_user: avelon
  collections:
    - community.docker

  vars: 
    varReboot: false


  pre_tasks:
    - name: install necessary apache packages
      when: inventory_hostname in groups['vmapache']
      apt:
        name: 
          - docker.io
          - git
        state: latest

    - name: install necessary mariadb packages
      when: inventory_hostname in groups['vmmariadb']
      apt:
        name: 
          - mariadb-server
          - git
        state: latest

    - name: install necessary dns packages
      when: inventory_hostname in groups['vmdns']
      apt:
        name: 
          - dnsmasq
          - git
        state: latest

    - name: stop systemd-resolved
      when: inventory_hostname in groups['vmdns']
      ansible.builtin.systemd:
        name: systemd-resolved.service
        state: stopped         
        enabled: false
        mask: no

    - name: install necessary nginx packages
      when: 
        - inventory_hostname in groups['vmnginxnocache'] or inventory_hostname in groups['vmnginxwithcache']
      apt:
        name: 
          - nginx
          - git
        state: latest

    - name: create user nginx for bug fixing
      when: inventory_hostname in groups['vmnginxnocache'] or inventory_hostname in groups['vmnginxwithcache']    
      user:
        name: nginx
        shell: /bin/false

  roles:
    - startdns
    - startmariadb 
    - startnginx
    - startwordpress


  post_tasks:
    - name: reboot all hosts
      reboot:
      when: varReboot is defined and varReboot
    
    - name: start dnsmasq
      when: inventory_hostname in groups['vmdns']
      shell: systemctl start systemd-resolved.service && systemctl stop systemd-resolved.service && systemctl start dnsmasq 
    
    - name: start systmed-resolved
      when: inventory_hostname in groups['vmdns']
      ansible.builtin.systemd_service:
        name: systemd-resovled.service
        state: started   

    - name: stop systemd-resolved
      when: inventory_hostname in groups['vmdns']
      ansible.builtin.systemd_service:
        name: systemd-resovled.service
        state: stopped   

    - name: start dnsmasq
      when: inventory_hostname in groups['vmdns']
      ansible.builtin.systemd_service:
        name: dnsmasq
        state: started           
